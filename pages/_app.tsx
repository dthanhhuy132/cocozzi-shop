import 'react-image-gallery/styles/css/image-gallery.css';
import 'slick-carousel/slick/slick.css';
import 'slick-carousel/slick/slick-theme.css';
import 'animate.css';

import 'nprogress/nprogress.css';
import '../styles/nprogress-custom.css';
import 'react-dropdown/style.css';
import '../styles/image-gallery.css';
import '../styles/slick.css';
import '../styles/masonry.css';
import '../styles/globals.css';

import {SessionProvider} from 'next-auth/react';
import Head from 'next/head';
import {Header} from '../components/Header';
import {Footer} from '../components/Footer';

import App, {AppContext} from 'next/app';

import Script from 'next/script';

import {Provider} from 'react-redux';
import store from '../store';
import categoryApi from '../service/categoryApi';
import {GetServerSideProps} from 'next';
import {useEffect, useMemo, useState} from 'react';
import {useRouter} from 'next/router';

import NProgress from 'nprogress';
import {getTokenSSRAndCSS} from '../helper';
import bagApi from '../service/bagApi';
import useGlobalState from '../state';

import Cookies from 'js-cookie';
import AdminSideBar from '../components/Admin/AdminSidebar';
import eventApi from '../service/eventApi';

const MyApp = ({Component, pageProps, session}) => {
   const router = useRouter();
   const {carts, categoryList, eventList, token, userToken} = pageProps;

   const [, setToken] = useGlobalState('accessToken');
   const [, setCurrentUser] = useGlobalState('currentUser');

   // set global state

   useMemo(() => {
      setToken(pageProps.token);
      setCurrentUser(pageProps.userInfo);
   }, []);

   // nprogress configure
   useEffect(() => {
      NProgress.configure({showSpinner: false});
      router.events.on('routeChangeStart', () => {
         NProgress.set(0.5);
         NProgress.start();
      });
      router.events.on('routeChangeComplete', () => {
         NProgress.done();
      });
      router.events.on('routeChangeError', () => {
         NProgress.done();
      });
   }, []);

   const isAdminPage = useMemo(() => {
      return router.pathname.indexOf('admin') >= 0;
   }, [router.pathname]);

   return (
      <SessionProvider session={session}>
         <Provider store={store}>
            <Head>
               <title>Cocozzi</title>
               <meta name='description' content='Generated by create next app' />
               <link rel='icon' href='/favicon.ico' />
            </Head>
            <Script src='https://sp.zalo.me/plugins/sdk.js'></Script>

            <Header carts={carts} categoryList={categoryList} eventList={eventList}></Header>
            <div className=''>
               {isAdminPage && <AdminSideBar />}
               <Component {...pageProps} />
            </div>
            <Footer></Footer>
         </Provider>
      </SessionProvider>
   );
};

MyApp.getInitialProps = async (appContext: AppContext) => {
   const [token, userToken] = getTokenSSRAndCSS(appContext.ctx);

   const userId = userToken?.data._id;
   const appProps = await App.getInitialProps(appContext);

   const categoryRes = await categoryApi.getAllCategory();
   const cartRes = await bagApi.getUserCart(userId, token);
   const eventRes = await eventApi.getAllEvent();

   const carts = cartRes?.data?.data;
   const categoryList = categoryRes?.data?.data;
   const eventList = eventRes?.data?.data;

   return {
      pageProps: {
         ...appProps.pageProps,
         categoryList: categoryList || [],
         eventList: eventList || [],
         carts: carts || [],
         token: token,
         userToken: userToken,
      },
   };
};

export default MyApp;
